version: "3"

# Run an instance of `sample-project` using the latest available public release
# of `django-wm`. This will run the `selfcheck` management command which should
# help to catch any packaging errors (e.g. missing templates).

# Run two servers.
# `with-celery` installs and runs the local django-wm library.
# `upgrade-check` installs the previous public version, creates some data,
#  then upgrades to the latest public pre-release to catch incompatibilities.


services:
  upgrade-check-db:
    image: postgres
    env_file:
      - ./sample-project/docker/.env
      - ./sample-project/docker/upgrade-check/.env
    ports:
      - "5432"

  upgrade-check-rabbitmq:
    image: rabbitmq:3-alpine
    env_file:
      - ./sample-project/docker/.env
      - ./sample-project/docker/upgrade-check/.env
    ports:
      - "5672"

  upgrade-check-web.org:
    build:
      dockerfile: ./sample-project/docker/upgrade-check/Dockerfile
      context: .
    depends_on:
      - upgrade-check-db
      - upgrade-check-rabbitmq
    env_file:
      - ./sample-project/docker/.env
      - ./sample-project/docker/upgrade-check/.env
    ports:
      - "8003:80"
    command: ["bash", "/usr/src/app/docker/wait-for-it.sh", "upgrade-check-db:5432", "--", "bash", "/usr/src/app/docker/upgrade-check/entrypoint.sh"]

  upgrade-check-cron:
    build:
      dockerfile: ./sample-project/docker/upgrade-check/Dockerfile-cron
      context: .
    depends_on:
      - upgrade-check-db
      - upgrade-check-web.org
    env_file:
      - ./sample-project/docker/.env
      - ./sample-project/docker/upgrade-check/.env
    command: crond -l 2 -f


  with-celery-db:
    image: postgres
    env_file:
      - ./sample-project/docker/.env
      - ./sample-project/docker/upgrade-check/.env-other
    ports:
      - "5432"

  with-celery-rabbitmq:
    image: rabbitmq:3-alpine
    env_file:
      - ./sample-project/docker/.env
      - ./sample-project/docker/upgrade-check/.env-other
    ports:
      - "5672"

  with-celery-web.org:
    build:
      dockerfile: ./sample-project/docker/with-celery/Dockerfile
      context: .
    depends_on:
      - with-celery-db
      - with-celery-rabbitmq
    env_file:
      - ./sample-project/docker/.env
      - ./sample-project/docker/upgrade-check/.env-other
    ports:
      - "8001:80"
    command: ["bash", "/usr/src/app/docker/wait-for-it.sh", "with-celery-db:5432", "--", "bash", "/usr/src/app/docker/with-celery/entrypoint.sh"]


  with-celery-cron:
    build:
      dockerfile: ./sample-project/docker/with-celery/Dockerfile
      context: .
    depends_on:
      - with-celery-db
      - with-celery-web.org
    env_file:
      - ./sample-project/docker/.env
      - ./sample-project/docker/upgrade-check/.env-other
    command: crond -l 2 -f
